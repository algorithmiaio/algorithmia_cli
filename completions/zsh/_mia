#compdef mia

_mia() {
  local -a _1st_arguments
  _1st_arguments=(
    "auth":"Configure an authentication profile"
    "run":"Run an algorithm"
    "clone":"Clones an algorithm repo"
    "ls":"List data in a data collection"
    "mkdir":"Create a data collection"
    "rmdir":"Remove a data collection"
    "rm":"Remove a file from a data collection"
    "cp":"Copy a file to or from a data collection"
    "cat":"Echo the contents of a data collection file"
  )

  _arguments '*:: :->command'

  if (( CURRENT == 1 )); then
    _describe -t commands "mia command" _1st_arguments
    return
  fi

	local -a _command_args
	case "$words[1]" in
    auth)
      _command_args=()
      ;;

		run)
			_command_args=(
				'(-o|--output)'{-o,--output}'[Output result to file]:Output file:_files' \
				'(-s|--silence)'{-s,--silence}'[Suppress some output]' \
				'--timeout=[Sets algorithm timeout]:timeout:' \
				- set1 '(-d|--data)'{-d,--data}'[Input data]:Input data:' \
				- set2 '(-D|--data-file)'{-D,--data-file}'[Input data from file]:Input file:_files' \
			)
			;;

    ls)
			_command_args=(
				'-l[Use long listing format]' \
      )
      ;;

    cp)
			_command_args=(
				'-c=[Concurrency when copying multiple files (default: 8)]' \
        '*:Source files:_files' \
        ':Destination:_files' \
      )
      ;;

  esac


  _arguments \
	  '--profile[authentication profile]:Profile name:->profiles' \
		$_command_args \
		&&  return 0


#  __mia_data () {
#    local expl data profile
#    profile=${opt_args[--profile]:-default}
#
#    # TODO:
#    # 1: figure out how to pass in $parent
#    data=($(mia ls --profile $profile $parent))
#    _wanted data expl data compadd $* -P 'data://' - $data
#  }

	__mia_profiles() {
    local expl profiles
	  profiles=($(cat ~/.algorithmia/config | gawk 'match($0, /\[profiles\.(.*)\]/, m) { printf "%s ", m[1] }'))
	  _wanted profiles expl profile compadd $* - $profiles
  }

  case $state in
		(profiles)
		  __mia_profiles && return 0
		  ;;
    (data)
      __mia_data && return 0
      ;;
  esac

}


_mia "$@"
